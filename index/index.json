{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/plug\/create-an-app","title":"Creating an app","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginbuilder\/associatedplugin","title":"var associatedPlugin: (PluginInterface)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginbuilder\/build()","title":"func build()","type":"method"},{"path":"\/documentation\/plug\/pluginbuilder\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/plug\/pluginbuilder\/receive(event:data:)","title":"func receive(event: String, data: Any?) async","type":"method"},{"path":"\/documentation\/plug\/pluginbuilder\/send(name:data:)","title":"func send(name: String, data: Any?)","type":"method"},{"path":"\/documentation\/plug\/pluginbuilder\/storeplugin(_:)","title":"func storePlugin((PluginInterface))","type":"method"}],"path":"\/documentation\/plug\/pluginbuilder","title":"PluginBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginmanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginmanager\/findplugininformation(where:)","title":"func findPluginInformation(where: (PluginDetails) -> Bool) -> LoadedPlugin?","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/findpluginsinformation(where:)","title":"func findPluginsInformation(where: (PluginDetails) -> Bool) -> [LoadedPlugin]","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/loadplugin(path:closure:)","title":"func loadPlugin(path: String, closure: ((LoadedPluginBuilder) async -> Void)?) async throws","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/loadplugin(pathwithoutextension:closure:)","title":"func loadPlugin(pathWithoutExtension: String, closure: ((LoadedPluginBuilder) async -> Void)?) async throws","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/loadplugins(path:closure:)","title":"func loadPlugins(path: String, closure: ((LoadedPluginBuilder) async -> Void)?) async throws","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/reloadplugin(where:)","title":"func reloadPlugin(where: (PluginDetails) -> Bool) async throws -> Bool","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/send(event:data:to:)","title":"func send(event: String, data: Any?, to: (PluginDetails) -> Bool) async","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/unloadallplugins()","title":"func unloadAllPlugins()","type":"method"},{"path":"\/documentation\/plug\/pluginmanager\/unloadplugin(where:)","title":"func unloadPlugin(where: (PluginDetails) -> Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginmanager\/initsymbol","title":"static let initSymbol: String","type":"property"}],"path":"\/documentation\/plug\/pluginmanager","title":"PluginManager","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/plug\/plugininterface\/builder-swift.associatedtype","title":"Builder","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/plug\/plugininterface\/init(_:)","title":"init(Self.Builder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/plug\/plugininterface\/author","title":"var author: String","type":"property"},{"path":"\/documentation\/plug\/plugininterface\/builder-swift.property","title":"var builder: Self.Builder?","type":"property"},{"path":"\/documentation\/plug\/plugininterface\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/plug\/plugininterface\/version","title":"var version: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/plug\/plugininterface\/on(event:)","title":"func on(event: PluginLifecycleEvent)","type":"method"},{"path":"\/documentation\/plug\/plugininterface\/on(event:data:)","title":"func on(event: String, data: Any?) async","type":"method"},{"path":"\/documentation\/plug\/plugininterface\/send(name:data:)","title":"func send(name: String, data: Any?)","type":"method"}],"path":"\/documentation\/plug\/plugininterface","title":"PluginInterface","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/plug\/loadedplugin\/builder","title":"var builder: PluginBuilder","type":"property"},{"path":"\/documentation\/plug\/loadedplugin\/details","title":"var details: PluginDetails","type":"property"}],"path":"\/documentation\/plug\/loadedplugin","title":"LoadedPlugin","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/plug\/loadedpluginbuilder\/on(name:callback:)-5wscb","title":"func on<T>(name: String, callback: ((T) -> Void))","type":"method"},{"path":"\/documentation\/plug\/loadedpluginbuilder\/on(name:callback:)-7xnsw","title":"func on(name: String, callback: (() -> Void))","type":"method"}],"path":"\/documentation\/plug\/loadedpluginbuilder","title":"LoadedPluginBuilder","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/plug\/plugindetails\/author","title":"var author: String","type":"property"},{"path":"\/documentation\/plug\/plugindetails\/filename","title":"var filename: String","type":"property"},{"path":"\/documentation\/plug\/plugindetails\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/plug\/plugindetails\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/plug\/plugindetails\/version","title":"var version: String","type":"property"}],"path":"\/documentation\/plug\/plugindetails","title":"PluginDetails","type":"struct"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/plug\/plugin()","title":"macro Plugin()","type":"macro"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginerror\/alreadyloaded","title":"case alreadyLoaded","type":"case"},{"path":"\/documentation\/plug\/pluginerror\/invalidpath(path:)","title":"case invalidPath(path: String)","type":"case"},{"path":"\/documentation\/plug\/pluginerror\/loadingsymbolnotfound(sym:)","title":"case loadingSymbolNotFound(sym: String)","type":"case"},{"path":"\/documentation\/plug\/pluginerror\/securityerror","title":"case securityError","type":"case"},{"path":"\/documentation\/plug\/pluginerror\/unknownerror(message:)","title":"case unknownError(message: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/plug\/pluginerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/plug\/pluginerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/plug\/pluginerror","title":"PluginError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginlifecycleevent\/load","title":"case load","type":"case"},{"path":"\/documentation\/plug\/pluginlifecycleevent\/unload","title":"case unload","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/plug\/pluginlifecycleevent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/plug\/pluginlifecycleevent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/plug\/pluginlifecycleevent","title":"PluginLifecycleEvent","type":"enum"}],"path":"\/documentation\/plug","title":"Plug","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}