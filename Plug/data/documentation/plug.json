{"variants":[{"paths":["\/documentation\/plug"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/Plug\/documentation\/Plug","interfaceLanguage":"swift"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Plug\/documentation\/Plug\/PluginBuilder","doc:\/\/Plug\/documentation\/Plug\/PluginManager"]},{"title":"Protocols","identifiers":["doc:\/\/Plug\/documentation\/Plug\/PluginInterface"]},{"title":"Structures","identifiers":["doc:\/\/Plug\/documentation\/Plug\/LoadedPlugin","doc:\/\/Plug\/documentation\/Plug\/LoadedPluginBuilder","doc:\/\/Plug\/documentation\/Plug\/PluginDetails"]},{"title":"Macros","identifiers":["doc:\/\/Plug\/documentation\/Plug\/Plugin()"]},{"title":"Enumerations","identifiers":["doc:\/\/Plug\/documentation\/Plug\/PluginError","doc:\/\/Plug\/documentation\/Plug\/PluginLifecycleEvent"]}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Plug","title":"Plug","symbolKind":"module","role":"collection","modules":[{"name":"Plug"}]},"hierarchy":{"paths":[[]]},"references":{"doc://Plug/documentation/Plug/PluginError":{"role":"symbol","title":"PluginError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginError"}],"abstract":[{"type":"text","text":"Errors related to plugin management."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginError"}],"url":"\/documentation\/plug\/pluginerror"},"doc://Plug/documentation/Plug":{"role":"collection","title":"Plug","abstract":[],"identifier":"doc:\/\/Plug\/documentation\/Plug","kind":"symbol","type":"topic","url":"\/documentation\/plug"},"doc://Plug/documentation/Plug/LoadedPlugin":{"role":"symbol","title":"LoadedPlugin","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoadedPlugin"}],"abstract":[{"type":"text","text":"Struct containing data related to a loaded plugin, such as its builder instance, details, etc."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/LoadedPlugin","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoadedPlugin"}],"url":"\/documentation\/plug\/loadedplugin"},"doc://Plug/documentation/Plug/LoadedPluginBuilder":{"role":"symbol","title":"LoadedPluginBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoadedPluginBuilder"}],"abstract":[{"type":"text","text":"Wrapper providing some syntactic sugar for registering events on a loaded builder."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/LoadedPluginBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoadedPluginBuilder"}],"url":"\/documentation\/plug\/loadedpluginbuilder"},"doc://Plug/documentation/Plug/Plugin()":{"role":"symbol","title":"Plugin()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Plugin"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/Plug\/documentation\/Plug\/Plugin()","kind":"symbol","type":"topic","url":"\/documentation\/plug\/plugin()"},"doc://Plug/documentation/Plug/PluginManager":{"role":"symbol","title":"PluginManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginManager"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"PluginManager"},{"type":"text","text":" is a class responsible for plugin management. This is what you use in your application to load and unload plugins."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginManager"}],"url":"\/documentation\/plug\/pluginmanager"},"doc://Plug/documentation/Plug/PluginInterface":{"role":"symbol","title":"PluginInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginInterface"}],"abstract":[{"type":"text","text":"Implement this interface to create a plugin."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginInterface"}],"url":"\/documentation\/plug\/plugininterface"},"doc://Plug/documentation/Plug/PluginDetails":{"role":"symbol","title":"PluginDetails","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginDetails"}],"abstract":[{"type":"text","text":"Struct that contains the details of a plugin, such as its name, version, author, path, etc."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginDetails","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginDetails"}],"url":"\/documentation\/plug\/plugindetails"},"doc://Plug/documentation/Plug/PluginBuilder":{"role":"symbol","title":"PluginBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginBuilder"}],"abstract":[{"type":"text","text":"This protocol defines the interface for a plugin builder."},{"type":"text","text":" "},{"type":"text","text":"Normally, you would not implement this protocol directly, since the "},{"type":"codeVoice","code":"@Plugin"},{"type":"text","text":" macro"},{"type":"text","text":" "},{"type":"text","text":"will generate a builder for you. However, if you want to implement your own builder,"},{"type":"text","text":" "},{"type":"text","text":"you can do so by implementing this protocol and passing it to "},{"type":"codeVoice","code":"@Plugin"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For reference, check out the default implementation inserted by the "},{"type":"codeVoice","code":"@Plugin"},{"type":"text","text":" macro in"},{"type":"text","text":" "},{"type":"text","text":"Sources\/PlugMacros\/Macro.swift."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginBuilder"}],"url":"\/documentation\/plug\/pluginbuilder"},"doc://Plug/documentation/Plug/PluginLifecycleEvent":{"role":"symbol","title":"PluginLifecycleEvent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginLifecycleEvent"}],"abstract":[{"type":"text","text":"These represent the events on the plugin lifecycle."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginLifecycleEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginLifecycleEvent"}],"url":"\/documentation\/plug\/pluginlifecycleevent"}}}