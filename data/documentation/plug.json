{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A library for creating painless plugins for Swift applications."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Just add "},{"type":"codeVoice","code":"@Plugin"},{"type":"text","text":" to your plugin and use the library’s event system to communicate with the host application. Tested on macOS and Linux."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To get started, add the dependency to your "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":" file:"}]},{"type":"codeListing","syntax":"swift","code":[".package(url: \"https:\/\/github.com\/lyricalsoul\/Plug.git\", from: \"0.1.0\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then add "},{"type":"codeVoice","code":"Plug"},{"type":"text","text":" as a dependency to your target:"}]},{"type":"codeListing","syntax":"swift","code":[".product(name: \"Plug\", package: \"plug\")"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Please note that "},{"type":"codeVoice","code":"Plug"},{"type":"text","text":" is only compatible with Swift 5.9 and above."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/plug"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Plug\/documentation\/Plug","interfaceLanguage":"swift"},"topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/Plug\/documentation\/Plug\/Create-an-app"]},{"title":"Classes","identifiers":["doc:\/\/Plug\/documentation\/Plug\/PluginBuilder","doc:\/\/Plug\/documentation\/Plug\/PluginManager"]},{"title":"Protocols","identifiers":["doc:\/\/Plug\/documentation\/Plug\/PluginInterface"]},{"title":"Structures","identifiers":["doc:\/\/Plug\/documentation\/Plug\/LoadedPlugin","doc:\/\/Plug\/documentation\/Plug\/LoadedPluginBuilder","doc:\/\/Plug\/documentation\/Plug\/PluginDetails"]},{"title":"Macros","identifiers":["doc:\/\/Plug\/documentation\/Plug\/Plugin()"]},{"title":"Enumerations","identifiers":["doc:\/\/Plug\/documentation\/Plug\/PluginError","doc:\/\/Plug\/documentation\/Plug\/PluginLifecycleEvent"]}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Plug","title":"Plug","symbolKind":"module","role":"collection","modules":[{"name":"Plug"}]},"hierarchy":{"paths":[[]]},"references":{"doc://Plug/documentation/Plug/PluginError":{"role":"symbol","title":"PluginError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginError"}],"abstract":[{"type":"text","text":"Errors related to plugin management."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginError"}],"url":"\/documentation\/plug\/pluginerror"},"doc://Plug/documentation/Plug/PluginLifecycleEvent":{"role":"symbol","title":"PluginLifecycleEvent","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginLifecycleEvent"}],"abstract":[{"type":"text","text":"These represent the events on the plugin lifecycle."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginLifecycleEvent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginLifecycleEvent"}],"url":"\/documentation\/plug\/pluginlifecycleevent"},"doc://Plug/documentation/Plug/PluginBuilder":{"role":"symbol","title":"PluginBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginBuilder"}],"abstract":[{"type":"text","text":"This protocol defines the interface for a plugin builder."},{"type":"text","text":" "},{"type":"text","text":"Normally, you don’t need to implement your own builder, since the "},{"type":"codeVoice","code":"@Plugin"},{"type":"text","text":" macro"},{"type":"text","text":" "},{"type":"text","text":"does that for you. However, if you need to implement your own builder,"},{"type":"text","text":" "},{"type":"text","text":"you can do so by implementing this protocol and passing it to the macro."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginBuilder"}],"url":"\/documentation\/plug\/pluginbuilder"},"doc://Plug/documentation/Plug/Create-an-app":{"role":"article","title":"Creating an app","abstract":[{"type":"text","text":"This tutorial will walk you through creating a simple app that uses "},{"type":"codeVoice","code":"Plug"},{"type":"text","text":" to load and create plugins."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/Create-an-app","kind":"article","type":"topic","url":"\/documentation\/plug\/create-an-app"},"doc://Plug/documentation/Plug":{"role":"collection","title":"Plug","abstract":[],"identifier":"doc:\/\/Plug\/documentation\/Plug","kind":"symbol","type":"topic","url":"\/documentation\/plug"},"doc://Plug/documentation/Plug/PluginInterface":{"role":"symbol","title":"PluginInterface","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginInterface"}],"abstract":[{"type":"text","text":"Implement this interface to create a plugin."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginInterface","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginInterface"}],"url":"\/documentation\/plug\/plugininterface"},"doc://Plug/documentation/Plug/LoadedPlugin":{"role":"symbol","title":"LoadedPlugin","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoadedPlugin"}],"abstract":[{"type":"text","text":"Struct containing data related to a loaded plugin, such as its builder instance, details, etc."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/LoadedPlugin","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoadedPlugin"}],"url":"\/documentation\/plug\/loadedplugin"},"doc://Plug/documentation/Plug/LoadedPluginBuilder":{"role":"symbol","title":"LoadedPluginBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoadedPluginBuilder"}],"abstract":[{"type":"text","text":"Wrapper providing some syntactic sugar for registering events on a loaded builder."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/LoadedPluginBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoadedPluginBuilder"}],"url":"\/documentation\/plug\/loadedpluginbuilder"},"doc://Plug/documentation/Plug/Plugin()":{"role":"symbol","title":"Plugin()","fragments":[{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Plugin"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/Plug\/documentation\/Plug\/Plugin()","kind":"symbol","type":"topic","url":"\/documentation\/plug\/plugin()"},"doc://Plug/documentation/Plug/PluginManager":{"role":"symbol","title":"PluginManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginManager"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"PluginManager"},{"type":"text","text":" is a class responsible for plugin management. This is what you use in your application to load and unload plugins."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginManager"}],"url":"\/documentation\/plug\/pluginmanager"},"doc://Plug/documentation/Plug/PluginDetails":{"role":"symbol","title":"PluginDetails","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginDetails"}],"abstract":[{"type":"text","text":"Struct that contains the details of a plugin, such as its name, version, author, path, etc."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginDetails","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginDetails"}],"url":"\/documentation\/plug\/plugindetails"}}}