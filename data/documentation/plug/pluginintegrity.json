{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginIntegrity"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/plug\/pluginintegrity"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Plug\/documentation\/Plug\/FileBasedPluginWhitelist","doc:\/\/Plug\/documentation\/Plug\/SimplePluginWhitelist"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This protocol defines the security requirements for a plugin."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginIntegrity"}],"title":"PluginIntegrity","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:4Plug15PluginIntegrityP","modules":[{"name":"Plug"}],"navigatorTitle":[{"kind":"identifier","text":"PluginIntegrity"}]},"hierarchy":{"paths":[["doc:\/\/Plug\/documentation\/Plug"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity\/acceptPlugin(_:)","doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity\/canOpenPlugin(withHash:)"]}],"references":{"doc://Plug/documentation/Plug/PluginIntegrity":{"role":"symbol","title":"PluginIntegrity","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginIntegrity"}],"abstract":[{"type":"text","text":"This protocol defines the security requirements for a plugin."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginIntegrity"}],"url":"\/documentation\/plug\/pluginintegrity"},"doc://Plug/documentation/Plug":{"role":"collection","title":"Plug","abstract":[],"identifier":"doc:\/\/Plug\/documentation\/Plug","kind":"symbol","type":"topic","url":"\/documentation\/plug"},"doc://Plug/documentation/Plug/FileBasedPluginWhitelist":{"role":"symbol","title":"FileBasedPluginWhitelist","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileBasedPluginWhitelist"}],"abstract":[{"type":"text","text":"A file-based implementation of "},{"type":"codeVoice","code":"PluginIntegrity"},{"type":"text","text":". Recommended for production use."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/FileBasedPluginWhitelist","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileBasedPluginWhitelist"}],"url":"\/documentation\/plug\/filebasedpluginwhitelist"},"doc://Plug/documentation/Plug/PluginIntegrity/acceptPlugin(_:)":{"role":"symbol","title":"acceptPlugin(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"acceptPlugin"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"LoadedPluginBuilder","preciseIdentifier":"s:4Plug19LoadedPluginBuilderV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Receives the loaded plugin data. Return true if the plugin is valid."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity\/acceptPlugin(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/plug\/pluginintegrity\/acceptplugin(_:)"},"doc://Plug/documentation/Plug/SimplePluginWhitelist":{"role":"symbol","title":"SimplePluginWhitelist","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SimplePluginWhitelist"}],"abstract":[{"type":"text","text":"A simple implementation of "},{"type":"codeVoice","code":"PluginIntegrity"},{"type":"text","text":". Should be used for testing purposes only."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/SimplePluginWhitelist","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SimplePluginWhitelist"}],"url":"\/documentation\/plug\/simplepluginwhitelist"},"doc://Plug/documentation/Plug/PluginIntegrity/canOpenPlugin(withHash:)":{"role":"symbol","title":"canOpenPlugin(withHash:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"canOpenPlugin"},{"kind":"text","text":"("},{"kind":"externalParam","text":"withHash"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Receives the MD5 hash of the pluginâ€™s binary. Return true if the hash is valid."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity\/canOpenPlugin(withHash:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/plug\/pluginintegrity\/canopenplugin(withhash:)"}}}