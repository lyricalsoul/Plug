{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadPlugin"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pathWithoutExtension"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","identifier":"doc:\/\/Plug\/documentation\/Plug\/LoadedPluginBuilder","preciseIdentifier":"s:4Plug19LoadedPluginBuilderV","text":"LoadedPluginBuilder"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")? = nil) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The loaded plugin."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"path: The path of the plugin."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"closure (optional): The closure to use when the plugin is loaded."}]}]}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"PluginError"},{"type":"text","text":" if the plugin could not be loaded (or if it is already loaded)."}]}],"type":"aside","name":"Throws"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/plug\/pluginmanager\/loadplugin(pathwithoutextension:closure:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Plug\/documentation\/Plug\/PluginManager\/loadPlugin(pathWithoutExtension:closure:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Loads a plugin, except it doesn’t require for an extension to be present in the path."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadPlugin"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pathWithoutExtension"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"LoadedPluginBuilder","preciseIdentifier":"s:4Plug19LoadedPluginBuilderV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"title":"loadPlugin(pathWithoutExtension:closure:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:4Plug13PluginManagerC04loadB020pathWithoutExtension7closureySS_yAA06LoadedB7BuilderVYacSgtYaKF","modules":[{"name":"Plug"}]},"hierarchy":{"paths":[["doc:\/\/Plug\/documentation\/Plug","doc:\/\/Plug\/documentation\/Plug\/PluginManager"]]},"references":{"doc://Plug/documentation/Plug":{"role":"collection","title":"Plug","abstract":[],"identifier":"doc:\/\/Plug\/documentation\/Plug","kind":"symbol","type":"topic","url":"\/documentation\/plug"},"doc://Plug/documentation/Plug/LoadedPluginBuilder":{"role":"symbol","title":"LoadedPluginBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoadedPluginBuilder"}],"abstract":[{"type":"text","text":"Wrapper providing some syntactic sugar for registering events on a loaded builder."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/LoadedPluginBuilder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoadedPluginBuilder"}],"url":"\/documentation\/plug\/loadedpluginbuilder"},"doc://Plug/documentation/Plug/PluginManager/loadPlugin(pathWithoutExtension:closure:)":{"role":"symbol","title":"loadPlugin(pathWithoutExtension:closure:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadPlugin"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pathWithoutExtension"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"LoadedPluginBuilder","preciseIdentifier":"s:4Plug19LoadedPluginBuilderV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Loads a plugin, except it doesn’t require for an extension to be present in the path."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginManager\/loadPlugin(pathWithoutExtension:closure:)","kind":"symbol","type":"topic","url":"\/documentation\/plug\/pluginmanager\/loadplugin(pathwithoutextension:closure:)"},"doc://Plug/documentation/Plug/PluginManager":{"role":"symbol","title":"PluginManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginManager"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"PluginManager"},{"type":"text","text":" is a class responsible for plugin management. This is what you use in your application to load and unload plugins."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginManager"}],"url":"\/documentation\/plug\/pluginmanager"}}}