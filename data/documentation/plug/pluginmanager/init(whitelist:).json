{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"whitelist"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity","preciseIdentifier":"s:4Plug15PluginIntegrityP","text":"PluginIntegrity"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"whitelist: The whitelist to use. If "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", no whitelist will be used."}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/plug\/pluginmanager\/init(whitelist:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Plug\/documentation\/Plug\/PluginManager\/init(whitelist:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new instance of "},{"type":"codeVoice","code":"PluginManager"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"whitelist"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PluginIntegrity","preciseIdentifier":"s:4Plug15PluginIntegrityP"},{"kind":"text","text":"?)"}],"title":"init(whitelist:)","roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:4Plug13PluginManagerC9whitelistAcA0B9Integrity_pSg_tcfc","modules":[{"name":"Plug"}]},"hierarchy":{"paths":[["doc:\/\/Plug\/documentation\/Plug","doc:\/\/Plug\/documentation\/Plug\/PluginManager"]]},"references":{"doc://Plug/documentation/Plug/PluginIntegrity":{"role":"symbol","title":"PluginIntegrity","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginIntegrity"}],"abstract":[{"type":"text","text":"This protocol defines the security requirements for a plugin."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginIntegrity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginIntegrity"}],"url":"\/documentation\/plug\/pluginintegrity"},"doc://Plug/documentation/Plug/PluginManager":{"role":"symbol","title":"PluginManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PluginManager"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"PluginManager"},{"type":"text","text":" is a class responsible for plugin management. This is what you use in your application to load and unload plugins."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PluginManager"}],"url":"\/documentation\/plug\/pluginmanager"},"doc://Plug/documentation/Plug":{"role":"collection","title":"Plug","abstract":[],"identifier":"doc:\/\/Plug\/documentation\/Plug","kind":"symbol","type":"topic","url":"\/documentation\/plug"},"doc://Plug/documentation/Plug/PluginManager/init(whitelist:)":{"role":"symbol","title":"init(whitelist:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"whitelist"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PluginIntegrity","preciseIdentifier":"s:4Plug15PluginIntegrityP"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a new instance of "},{"type":"codeVoice","code":"PluginManager"},{"type":"text","text":"."}],"identifier":"doc:\/\/Plug\/documentation\/Plug\/PluginManager\/init(whitelist:)","kind":"symbol","type":"topic","url":"\/documentation\/plug\/pluginmanager\/init(whitelist:)"}}}